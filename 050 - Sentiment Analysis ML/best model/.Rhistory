plot(decompose_sentiment_neg)
corrDf <- data.frame(xts_BtcPrice, decompose_sentiment_neg$trend)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, as.ts(decompose_sentiment_neg$trend))
corrDf %>% ggpairs()
corrDf <- data.frame(as.ts(xts_BtcPrice), as.ts(decompose_sentiment_neg$trend))
corrDf %>% ggpairs()
corrDf <- data.frame(merge(xts_BtcPrice,decompose_sentiment_neg$trend))
colnames(corrDf)[1] <- "BTC/USD"
colnames(corrDf)[2] <- "Twt_dcmp_trnd"
ggpairs(corrDf, lower = list(continuous = wrap(corrPltFun, pts=list(colour="black"), smt=list(method="lm", colour="blue"))))
corrDf <- data.frame(merge(xts_BtcPrice,decompose_sentiment_neg$trend))
colnames(corrDf)[1] <- "BTC/USD"
colnames(corrDf)[2] <- "Twt_dcmp_trnd"
ggpairs(corrDf, lower = list(continuous = wrap(corrPltFun, pts=list(colour="black"), smt=list(method="lm", colour="blue"))))
corrDf <- data.frame(merge(xts_BtcPrice,decompose_sentiment_neg$random))
colnames(corrDf)[1] <- "BTC/USD"
colnames(corrDf)[2] <- "Twt_dcmp_trnd"
ggpairs(corrDf, lower = list(continuous = wrap(corrPltFun, pts=list(colour="black"), smt=list(method="lm", colour="blue"))))
#frequency is weekly in xts_TwtCnt
ts = ts(as.ts(xts_sentiment_neg), frequency = 7)
decompose_sentiment_neg = decompose(ts, "additive")
corrDf <- data.frame(merge(xts_BtcPrice,decompose_sentiment_neg$trend + decompose_sentiment_neg$random))
colnames(corrDf)[1] <- "BTC/USD"
colnames(corrDf)[2] <- "Twt_dcmp_trnd"
ggpairs(corrDf, lower = list(continuous = wrap(corrPltFun, pts=list(colour="black"), smt=list(method="lm", colour="blue"))))
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_neg)
corrDf %>% ggpairs()
#frequency is weekly in xts_TwtCnt
ts = ts(as.ts(xts_sentiment_neg), frequency = 7)
decompose_sentiment_neg = decompose(ts, "additive")
corrDf <- data.frame(merge(xts_BtcPrice,decompose_sentiment_neg$trend))
colnames(corrDf)[1] <- "BTC/USD"
colnames(corrDf)[2] <- "Twt_dcmp_trnd"
ggpairs(corrDf, lower = list(continuous = wrap(corrPltFun, pts=list(colour="black"), smt=list(method="lm", colour="blue"))))
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_neg)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_pos)
corrDf %>% ggpairs()
ts = ts(as.ts(lag(xts_sentiment_neg,1)), frequency = 7)
decompose_sentiment_neg = decompose(ts, "additive")
corrDf <- data.frame(merge(xts_BtcPrice,decompose_sentiment_neg$trend))
colnames(corrDf)[1] <- "BTC/USD"
colnames(corrDf)[2] <- "Twt_dcmp_trnd"
ggpairs(corrDf, lower = list(continuous = wrap(corrPltFun, pts=list(colour="black"), smt=list(method="lm", colour="blue"))))
#frequency is weekly in xts_TwtCnt
ts = ts(as.ts(lag(xts_sentiment_neg,2)), frequency = 7)
decompose_sentiment_neg = decompose(ts, "additive")
corrDf <- data.frame(merge(xts_BtcPrice,decompose_sentiment_neg$trend))
colnames(corrDf)[1] <- "BTC/USD"
colnames(corrDf)[2] <- "Twt_dcmp_trnd"
ggpairs(corrDf, lower = list(continuous = wrap(corrPltFun, pts=list(colour="black"), smt=list(method="lm", colour="blue"))))
#frequency is weekly in xts_TwtCnt
ts = ts(as.ts(lag(xts_sentiment_neg,0)), frequency = 7)
decompose_sentiment_neg = decompose(ts, "additive")
corrDf <- data.frame(merge(xts_BtcPrice,decompose_sentiment_neg$trend))
colnames(corrDf)[1] <- "BTC/USD"
colnames(corrDf)[2] <- "Twt_dcmp_trnd"
ggpairs(corrDf, lower = list(continuous = wrap(corrPltFun, pts=list(colour="black"), smt=list(method="lm", colour="blue"))))
#frequency is weekly in xts_TwtCnt
ts = ts(as.ts(xts_sentiment_neg), frequency = 7)
decompose_sentiment_neg = decompose(ts, "additive")
corrDf <- data.frame(merge(xts_BtcPrice,decompose_sentiment_neg$trend))
colnames(corrDf)[1] <- "BTC/USD"
colnames(corrDf)[2] <- "Twt_dcmp_trnd"
ggpairs(corrDf, lower = list(continuous = wrap(corrPltFun, pts=list(colour="black"), smt=list(method="lm", colour="blue"))))
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_pos_amp)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_neg_amp)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_npr)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_npr_amp)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_npnr)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_sum_pos_neg)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_npr_alt)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_rawPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_pPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_nPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_pos_ampPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_neg_ampPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_nprPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_npr_ampPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_npnrPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_sum_pos_negPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_npr_altPer)
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_raw))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_pos))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_neg))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_pos_amp))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_neg_amp))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_npr))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_npr_amp))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_npnr))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_sum_pos_neg))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_npr_alt))
corrDf %>% ggpairs()
save.image("C:/Users/hupse/OneDrive/Master thesis/013 - Correlation - SentimentR/Correlation_Final_Lex_sentiword.RData")
options(scipen=999)
Sys.setenv(TZ='UTC')
install.packages("GGally")
install.packages("fpp2")
install.packages("gridExtra")
library("mgcv")
library("devtools")
library("forecast")
library("RODBC")
library("httpuv")
library("xts")
library("plyr")
library("GGally")
library("fpp2")
library("stringi")
library("gridExtra")
corrPltFun <- function(data, mapping, pts=list(), smt=list(), ...){
ggplot(data = data, mapping = mapping, ...) +
do.call(geom_point, pts) +
do.call(geom_smooth, smt)
}
#get figure eight results
conn <- odbcDriverConnect('driver={SQL Server};server=localhost\\SQLEXPRESS;database=BitcoinTwts;trusted_connection=true')
btcTwts = sqlQuery(conn, paste("SELECT A.[status_id]
,A.[created_at]
,A.[user_id]
,A.[sentiment]
,B.favorite_count
,B.retweet_count
FROM [BitcoinTwts].[dbo].[Final_Lex_slangsd] AS A
INNER JOIN [BitcoinTwts].[dbo].[BitcoinTweetsUnion_Filtered_FinalInterval] AS B ON A.[status_id] = B.[status_id]
ORDER BY A.[created_at]"), as.is = TRUE)
odbcClose(conn)
#get amount of tweets
conn <- odbcDriverConnect('driver={SQL Server};server=localhost\\SQLEXPRESS;database=BitcoinAnalysis;trusted_connection=true')
query = sprintf("SELECT * FROM [BitcoinAnalysis].[dbo].[06. TwitterVolume_d]
WHERE [date] >= Convert(datetime2, '2018-01-28 00:00:00.000' ) AND
[date] <  Convert(datetime2, '2018-06-10 00:00:00.000' )")
twtCnt <- sqlQuery(conn, query, errors = TRUE, as.is=T)
odbcClose(conn)
#get bitcoin price
conn <- odbcDriverConnect('driver={SQL Server};server=localhost\\SQLEXPRESS;database=BitcoinAnalysis;trusted_connection=true')
query = sprintf("SELECT * FROM [BitcoinAnalysis].[dbo].[01. Bitfinex_C_TradingView_d]
WHERE [timestamp] >= Convert(datetime2, '2018-01-28 00:00:00.000' ) AND
[timestamp] <  Convert(datetime2, '2018-06-10 00:00:00.000' )")
btcPrice <- sqlQuery(conn, query, errors = TRUE, as.is=T)
odbcClose(conn)
btcTwts$created_at_date <- as.Date(btcTwts$created_at, "%Y-%m-%d")
btcTwts$sentiment_str <- btcTwts$sentiment
btcTwts$sentiment <- as.numeric(btcTwts$sentiment)
srS <- btcTwts %>% mutate(sentiment_pos = ifelse(btcTwts$sentiment > 0, 1, 0))
srS <- srS %>% mutate(sentiment_neg = ifelse(srS$sentiment < 0, -1,0))
srS <- srS %>% mutate(sentiment_neu = ifelse(srS$sentiment == 0, 1,0))
srS <- srS %>% mutate(sentiment_pos_amp = ifelse((srS$sentiment_pos == 1 & srS$favorite_count > 0),
srS$sentiment*(srS$favorite_count+1),
(ifelse((srS$sentiment_pos == 1 & srS$favorite_count == 0),
1*srS$sentiment,
0))))
srS <- srS %>% mutate(sentiment_neg_amp = ifelse((srS$sentiment_neg == -1 & srS$favorite_count > 0),
srS$sentiment*(srS$favorite_count+1),
(ifelse((srS$sentiment_neg == -1 & srS$favorite_count == 0),
1*srS$sentiment,
0))))
#aggregate to daily
sentiment_raw <- aggregate(x = srS[c("sentiment")],FUN = sum, by = list(date = srS$created_at_date))
sentiment_pos <- aggregate(x = srS[c("sentiment_pos")],FUN = sum, by = list(date = srS$created_at_date))
sentiment_neg <- aggregate(x = srS[c("sentiment_neg")],FUN = sum, by = list(date = srS$created_at_date))
sentiment_neu <- aggregate(x = srS[c("sentiment_neu")],FUN = sum, by = list(date = srS$created_at_date))
sentiment_pos_amp <- aggregate(x = srS[c("sentiment_pos_amp")],FUN = sum, by = list(date = srS$created_at_date))
sentiment_neg_amp <- aggregate(x = srS[c("sentiment_neg_amp")],FUN = sum, by = list(date = srS$created_at_date))
#prepare df objects for xts conversion
twtCnt[,1] <- as.Date(twtCnt[,1])
colnames(twtCnt) <- c("date","amount")
btcPriceDf <- data.frame(as.Date(btcPrice[,1]),as.numeric(btcPrice[,5]))
colnames(btcPriceDf) <- c("date","Close")
#convert to xts
xts_sentiment_raw <- xts(sentiment_raw[,2], order.by = as.Date(sentiment_raw[,1]))
xts_sentiment_pos <- xts(sentiment_pos[,2], order.by = as.Date(sentiment_pos[,1]))
xts_sentiment_neg <- xts(sentiment_neg[,2], order.by = as.Date(sentiment_neg[,1]))
xts_sentiment_pos_amp <- xts(sentiment_pos_amp[,2], order.by = as.Date(sentiment_pos_amp[,1]))
xts_sentiment_neg_amp <- xts(sentiment_neg_amp[,2], order.by = as.Date(sentiment_neg_amp[,1]))
xts_sentiment_npr <- xts(sentiment_npr[,2], order.by = as.Date(sentiment_npr[,1]))
xts_sentiment_npr_amp <- xts(sentiment_npr_amp[,2], order.by = as.Date(sentiment_npr_amp[,1]))
xts_sentiment_npnr <- xts(sentiment_npnr[,2], order.by = as.Date(sentiment_npnr[,1]))
xts_sentiment_sum_pos_neg <- xts(sentiment_sum_pos_neg[,2], order.by = as.Date(sentiment_sum_pos_neg[,1]))
xts_sentiment_npr_alt <- xts(sentiment_npr_alt[,2], order.by = as.Date(sentiment_npr_alt[,1]))
xts_TwtCnt <- xts(twtCnt[,2], order.by = as.Date(twtCnt[,1]))
xts_BtcPrice <- xts(btcPriceDf[,2], order.by = as.Date(btcPriceDf[,1]))
#convert to xts
xts_sentiment_raw <- xts(sentiment_raw[,2], order.by = as.Date(sentiment_raw[,1]))
xts_sentiment_pos <- xts(sentiment_pos[,2], order.by = as.Date(sentiment_pos[,1]))
xts_sentiment_neg <- xts(sentiment_neg[,2], order.by = as.Date(sentiment_neg[,1]))
xts_sentiment_pos_amp <- xts(sentiment_pos_amp[,2], order.by = as.Date(sentiment_pos_amp[,1]))
xts_sentiment_neg_amp <- xts(sentiment_neg_amp[,2], order.by = as.Date(sentiment_neg_amp[,1]))
xts_sentiment_npr <- xts(sentiment_npr[,2], order.by = as.Date(sentiment_npr[,1]))
xts_sentiment_npr_amp <- xts(sentiment_npr_amp[,2], order.by = as.Date(sentiment_npr_amp[,1]))
xts_sentiment_npnr <- xts(sentiment_npnr[,2], order.by = as.Date(sentiment_npnr[,1]))
xts_sentiment_sum_pos_neg <- xts(sentiment_sum_pos_neg[,2], order.by = as.Date(sentiment_sum_pos_neg[,1]))
xts_sentiment_npr_alt <- xts(sentiment_npr_alt[,2], order.by = as.Date(sentiment_npr_alt[,1]))
xts_TwtCnt <- xts(twtCnt[,2], order.by = as.Date(twtCnt[,1]))
xts_BtcPrice <- xts(btcPriceDf[,2], order.by = as.Date(btcPriceDf[,1]))
#convert to xts
xts_sentiment_raw <- xts(sentiment_raw[,2], order.by = as.Date(sentiment_raw[,1]))
xts_sentiment_pos <- xts(sentiment_pos[,2], order.by = as.Date(sentiment_pos[,1]))
xts_sentiment_neg <- xts(sentiment_neg[,2], order.by = as.Date(sentiment_neg[,1]))
xts_sentiment_pos_amp <- xts(sentiment_pos_amp[,2], order.by = as.Date(sentiment_pos_amp[,1]))
xts_sentiment_neg_amp <- xts(sentiment_neg_amp[,2], order.by = as.Date(sentiment_neg_amp[,1]))
xts_sentiment_npr <- xts(sentiment_npr[,2], order.by = as.Date(sentiment_npr[,1]))
xts_sentiment_npr_amp <- xts(sentiment_npr_amp[,2], order.by = as.Date(sentiment_npr_amp[,1]))
xts_sentiment_npnr <- xts(sentiment_npnr[,2], order.by = as.Date(sentiment_npnr[,1]))
xts_sentiment_sum_pos_neg <- xts(sentiment_sum_pos_neg[,2], order.by = as.Date(sentiment_sum_pos_neg[,1]))
xts_sentiment_npr_alt <- xts(sentiment_npr_alt[,2], order.by = as.Date(sentiment_npr_alt[,1]))
xts_TwtCnt <- xts(twtCnt[,2], order.by = as.Date(twtCnt[,1]))
xts_BtcPrice <- xts(btcPriceDf[,2], order.by = as.Date(btcPriceDf[,1]))
#convert to xts
xts_sentiment_raw <- xts(sentiment_raw[,2], order.by = as.Date(sentiment_raw[,1]))
xts_sentiment_pos <- xts(sentiment_pos[,2], order.by = as.Date(sentiment_pos[,1]))
xts_sentiment_neg <- xts(sentiment_neg[,2], order.by = as.Date(sentiment_neg[,1]))
xts_sentiment_pos_amp <- xts(sentiment_pos_amp[,2], order.by = as.Date(sentiment_pos_amp[,1]))
xts_sentiment_neg_amp <- xts(sentiment_neg_amp[,2], order.by = as.Date(sentiment_neg_amp[,1]))
xts_sentiment_npr <- xts(sentiment_npr[,2], order.by = as.Date(sentiment_npr[,1]))
xts_sentiment_npr_amp <- xts(sentiment_npr_amp[,2], order.by = as.Date(sentiment_npr_amp[,1]))
xts_sentiment_npnr <- xts(sentiment_npnr[,2], order.by = as.Date(sentiment_npnr[,1]))
xts_sentiment_sum_pos_neg <- xts(sentiment_sum_pos_neg[,2], order.by = as.Date(sentiment_sum_pos_neg[,1]))
xts_sentiment_npr_alt <- xts(sentiment_npr_alt[,2], order.by = as.Date(sentiment_npr_alt[,1]))
xts_TwtCnt <- xts(twtCnt[,2], order.by = as.Date(twtCnt[,1]))
xts_BtcPrice <- xts(btcPriceDf[,2], order.by = as.Date(btcPriceDf[,1]))
#convert to xts
xts_sentiment_raw <- xts(sentiment_raw[,2], order.by = as.Date(sentiment_raw[,1]))
xts_sentiment_pos <- xts(sentiment_pos[,2], order.by = as.Date(sentiment_pos[,1]))
xts_sentiment_neg <- xts(sentiment_neg[,2], order.by = as.Date(sentiment_neg[,1]))
xts_sentiment_pos_amp <- xts(sentiment_pos_amp[,2], order.by = as.Date(sentiment_pos_amp[,1]))
xts_sentiment_neg_amp <- xts(sentiment_neg_amp[,2], order.by = as.Date(sentiment_neg_amp[,1]))
xts_sentiment_npr <- xts(sentiment_npr[,2], order.by = as.Date(sentiment_npr[,1]))
xts_sentiment_npr_amp <- xts(sentiment_npr_amp[,2], order.by = as.Date(sentiment_npr_amp[,1]))
xts_sentiment_npnr <- xts(sentiment_npnr[,2], order.by = as.Date(sentiment_npnr[,1]))
xts_sentiment_sum_pos_neg <- xts(sentiment_sum_pos_neg[,2], order.by = as.Date(sentiment_sum_pos_neg[,1]))
xts_sentiment_npr_alt <- xts(sentiment_npr_alt[,2], order.by = as.Date(sentiment_npr_alt[,1]))
xts_TwtCnt <- xts(twtCnt[,2], order.by = as.Date(twtCnt[,1]))
xts_BtcPrice <- xts(btcPriceDf[,2], order.by = as.Date(btcPriceDf[,1]))
#convert to xts
xts_sentiment_raw <- xts(sentiment_raw[,2], order.by = as.Date(sentiment_raw[,1]))
xts_sentiment_pos <- xts(sentiment_pos[,2], order.by = as.Date(sentiment_pos[,1]))
xts_sentiment_neg <- xts(sentiment_neg[,2], order.by = as.Date(sentiment_neg[,1]))
xts_sentiment_pos_amp <- xts(sentiment_pos_amp[,2], order.by = as.Date(sentiment_pos_amp[,1]))
xts_sentiment_neg_amp <- xts(sentiment_neg_amp[,2], order.by = as.Date(sentiment_neg_amp[,1]))
xts_sentiment_npr <- xts(sentiment_npr[,2], order.by = as.Date(sentiment_npr[,1]))
xts_sentiment_npr_amp <- xts(sentiment_npr_amp[,2], order.by = as.Date(sentiment_npr_amp[,1]))
xts_sentiment_npnr <- xts(sentiment_npnr[,2], order.by = as.Date(sentiment_npnr[,1]))
xts_sentiment_sum_pos_neg <- xts(sentiment_sum_pos_neg[,2], order.by = as.Date(sentiment_sum_pos_neg[,1]))
xts_sentiment_npr_alt <- xts(sentiment_npr_alt[,2], order.by = as.Date(sentiment_npr_alt[,1]))
xts_TwtCnt <- xts(twtCnt[,2], order.by = as.Date(twtCnt[,1]))
xts_BtcPrice <- xts(btcPriceDf[,2], order.by = as.Date(btcPriceDf[,1]))
sentiment_npr <- sentiment_pos
colnames(sentiment_npr) <- c('date','sentiment_npr')
sentiment_npr[,2] <- ((sentiment_pos[,2]-(sentiment_neg[,2]*-1))/(sentiment_pos[,2]+(sentiment_neg[,2]*-1)))
sentiment_npr_amp <- sentiment_pos_amp
colnames(sentiment_npr_amp) <- c('date','sentiment_npr_amp')
sentiment_npr_amp[,2] <- ((sentiment_pos_amp[,2]-(sentiment_neg_amp[,2]*-1))/(sentiment_pos_amp[,2]+(sentiment_neg_amp[,2]*-1)))
sentiment_npnr <- sentiment_neu
colnames(sentiment_npnr) <- c('date','sentiment_npnr')
sentiment_npnr[,2] <- ((sentiment_pos[,2]-sentiment_neg[,2]*-1)/(sentiment_pos[,2]+sentiment_neg[,2]*-1+sentiment_neu[,2]))
sentiment_sum_pos_neg <- sentiment_pos
colnames(sentiment_sum_pos_neg) <- c('date','sentiment_sum_pos_neg')
sentiment_sum_pos_neg[,2] <- (sentiment_pos[,2] + sentiment_neg[,2])
sentiment_npr_alt <- sentiment_pos
colnames(sentiment_npr_alt) <- c('date','sentiment_npr_alt')
sentiment_npr_alt[,2] <- ifelse(sentiment_pos[,2] < (sentiment_neg[,2]*-1), -1*((sentiment_neg[,2]*-1)/sentiment_pos[,2]),
ifelse(sentiment_pos[,2] > (sentiment_neg[,2]*-1), sentiment_pos[,2]/(sentiment_neg[,2]*-1), 0))
#prepare df objects for xts conversion
twtCnt[,1] <- as.Date(twtCnt[,1])
colnames(twtCnt) <- c("date","amount")
btcPriceDf <- data.frame(as.Date(btcPrice[,1]),as.numeric(btcPrice[,5]))
colnames(btcPriceDf) <- c("date","Close")
#convert to xts
xts_sentiment_raw <- xts(sentiment_raw[,2], order.by = as.Date(sentiment_raw[,1]))
xts_sentiment_pos <- xts(sentiment_pos[,2], order.by = as.Date(sentiment_pos[,1]))
xts_sentiment_neg <- xts(sentiment_neg[,2], order.by = as.Date(sentiment_neg[,1]))
xts_sentiment_pos_amp <- xts(sentiment_pos_amp[,2], order.by = as.Date(sentiment_pos_amp[,1]))
xts_sentiment_neg_amp <- xts(sentiment_neg_amp[,2], order.by = as.Date(sentiment_neg_amp[,1]))
xts_sentiment_npr <- xts(sentiment_npr[,2], order.by = as.Date(sentiment_npr[,1]))
xts_sentiment_npr_amp <- xts(sentiment_npr_amp[,2], order.by = as.Date(sentiment_npr_amp[,1]))
xts_sentiment_npnr <- xts(sentiment_npnr[,2], order.by = as.Date(sentiment_npnr[,1]))
xts_sentiment_sum_pos_neg <- xts(sentiment_sum_pos_neg[,2], order.by = as.Date(sentiment_sum_pos_neg[,1]))
xts_sentiment_npr_alt <- xts(sentiment_npr_alt[,2], order.by = as.Date(sentiment_npr_alt[,1]))
xts_TwtCnt <- xts(twtCnt[,2], order.by = as.Date(twtCnt[,1]))
xts_BtcPrice <- xts(btcPriceDf[,2], order.by = as.Date(btcPriceDf[,1]))
#percentage change in btcPrice
xts_sentiment_rawPer <- (xts_sentiment_raw/lag(xts_sentiment_raw,1) - 1)
xts_sentiment_pPer <- (xts_sentiment_pos/lag(xts_sentiment_pos,1) - 1)
xts_sentiment_nPer <- (xts_sentiment_neg/lag(xts_sentiment_neg,1) - 1)
xts_sentiment_pos_ampPer <- (xts_sentiment_pos_amp/lag(xts_sentiment_pos_amp,1) - 1)
xts_sentiment_neg_ampPer <- (xts_sentiment_neg_amp/lag(xts_sentiment_neg_amp,1) - 1)
xts_sentiment_nprPer <- (xts_sentiment_npr/lag(xts_sentiment_npr,1) - 1)
xts_sentiment_npr_ampPer <- (xts_sentiment_npr_amp/lag(xts_sentiment_npr_amp,1) - 1)
xts_sentiment_npnrPer <- (xts_sentiment_npnr/lag(xts_sentiment_npnr,1) - 1)
xts_sentiment_sum_pos_negPer <- (xts_sentiment_sum_pos_neg/lag(xts_sentiment_sum_pos_neg,1) - 1)
xts_sentiment_npr_altPer <- (xts_sentiment_npr_alt/lag(xts_sentiment_npr_alt,1) - 1)
xts_TwtCntPer <- (xts_TwtCnt/lag(xts_TwtCnt,-1) - 1)
xts_BtcPricePer <- (xts_BtcPrice/lag(xts_BtcPrice,-1) - 1)
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_raw)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_pos)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_neg)
corrDf %>% ggpairs()
#frequency is weekly in xts_TwtCnt
ts = ts(as.ts(xts_sentiment_neg), frequency = 7)
decompose_sentiment_neg = decompose(ts, "additive")
corrDf <- data.frame(merge(xts_BtcPrice,decompose_sentiment_neg$trend))
colnames(corrDf)[1] <- "BTC/USD"
colnames(corrDf)[2] <- "Twt_dcmp_trnd"
ggpairs(corrDf, lower = list(continuous = wrap(corrPltFun, pts=list(colour="black"), smt=list(method="lm", colour="blue"))))
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_pos_amp)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_neg_amp)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_npr)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_npr_amp)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_npnr)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_sum_pos_neg)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, xts_sentiment_npr_alt)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, lag(xts_sentiment_npr,1))
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPrice, lag(xts_sentiment_npr,2))
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_rawPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_pPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_nPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_pos_ampPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_neg_ampPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_nprPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_npr_ampPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_npnrPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_sum_pos_negPer)
corrDf %>% ggpairs()
corrDf <- data.frame(xts_BtcPricePer, xts_sentiment_npr_altPer)
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_raw))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_pos))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_neg))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_pos_amp))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_neg_amp))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_npr))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_npr_amp))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_npnr))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_sum_pos_neg))
corrDf %>% ggpairs()
corrDf <- data.frame(diff(xts_BtcPrice), diff(xts_sentiment_npr_alt))
corrDf %>% ggpairs()
save.image("C:/Users/hupse/OneDrive/Master thesis/013 - Correlation - SentimentR/Correlation_Final_Lex_slangsd.RData")
options(scipen=999)
Sys.setenv(TZ='UTC')
install.packages(c("ggplot2", "RODBC","devtools", "RTextTools", "caret", "doParallel"))
library("RODBC")
library("devtools")
library("RTextTools")
library("e1071")
library("caret")
library("randomForest")
library("doParallel")
library("RTextTools")
library("foreach")
library("maxent")
setwd("C:/Users/hupse/OneDrive/Master thesis/050 - ML/best model")
load("C:/Users/hupse/OneDrive/Master thesis/050 - ML/best model/SVM_750_3100_pos_3100_neg_0996_spars_66_conf.RData")
svm_model
View(svm_model)
svm_model[["fitted"]]
View(container@training_matrix)
View(container@classification_matrix)
View(df_words)
svm_model[["SV"]]@dimension
svm_model[["SV"]]
View(svm_model[["SV"]])
View(svm_model[["SV"]]@ra)
View(svm_model[["SV"]]@ja)
View(svm_model[["SV"]]@ia)
container@training_matrix@ia
svm_model[["decision.values"]]
View(svm_model[["fitted"]])
View(svm_model[["decision.values"]])
nanana <- merge(svm_model[["fitted"]], svm_model[["decision.values"]])
View(nanana)
nanana <- data.frame(svm_model[["fitted"]], svm_model[["decision.values"]])
container@training_matrix
View(container@classification_matrix)
View(container@training_matrix)
View(df_words)
svm_model[["SV"]]@dimension
svm_model[["SV"]]@ja
plot.svm(svm_model)
plot(svm_model)
svm_model <- models$SVM
plot(svm_model)
plot(svm_model, newdata_sp)
plot(svm_model, newdata)
plot(svm_model, newdata_sp)
plot(svm_model, newdata_sp$tweet)
plot(svm_model, newdata_sp[1:10])
?plot
?plot.svm
plot(svm_model, container)
plot(svm_model, container@training_matrix)
plot(svm_model, container@training_matrix~tweet)
plot(svm_model, container@training_matrix)
View(container@training_matrix)
plot(svm_model, container@training_matrix~container@classification_matrix)
plot(svm_model, svm_model[["decision.values"]]~svm_model[["decision.values"]])
svm_model
svm_model[["SV"]]
View(svm_model[["SV"]])
svm_model[["SV"]]@ra
#bitcoin tweets without retweets
#initial crawl
conn <- odbcDriverConnect('driver={SQL Server};server=localhost\\SQLEXPRESS;database=BitcoinTwts;trusted_connection=true')
crawlday <- "2018-11-06"
crawldayNext <- "2018-11-07"
tk <- create_token(app="BitcoinTweetsApp",consumer_key="gT3QlNAaTQY4qAzjsFGpGYkFw",consumer_secret="UgQjb9d46HRaormV4sOWPyKP8G9s0TqXQGIQH8rkBDA6MosIUO", access_token="498693406-Pxjnt2LywlgHYQBDeGzZTZmEF0EgVsKfoxsXr3Op", access_secret="Nq42YEfLLb0rltzFVwkI5wY9jILyAoopTyOiyaooyKyZp", set_renv = FALSE)
rt <- search_tweets("#bitcoin -\"RT @\"", n = 500, token = tk, lang = "en", until = crawldayNext)
rt$text_url_cleaned <- NA
sqlSave(conn, rt, tablename = "BitcoinTweets", append = TRUE, rownames = FALSE, verbose = TRUE
, varTypes = c(created_at="datetime", quoted_created_at= "datetime", retweet_created_at="datetime", account_created_at="datetime"))
options(scipen=999)
Sys.setenv(TZ='UTC')
install.packages("httpuv")
install.packages("devtools")
install.packages("RODBC")
library("devtools")
install.packages("devtools")
install.packages("RODBC")
devtools::install_github("mkearney/rtweet", force = TRUE, ref="d5c3233")
library("rtweet")
library("RODBC")
library("httpuv")
#bitcoin tweets without retweets
#initial crawl
conn <- odbcDriverConnect('driver={SQL Server};server=localhost\\SQLEXPRESS;database=BitcoinTwts;trusted_connection=true')
crawlday <- "2018-11-06"
crawldayNext <- "2018-11-07"
tk <- create_token(app="BitcoinTweetsApp",consumer_key="gT3QlNAaTQY4qAzjsFGpGYkFw",consumer_secret="UgQjb9d46HRaormV4sOWPyKP8G9s0TqXQGIQH8rkBDA6MosIUO", access_token="498693406-Pxjnt2LywlgHYQBDeGzZTZmEF0EgVsKfoxsXr3Op", access_secret="Nq42YEfLLb0rltzFVwkI5wY9jILyAoopTyOiyaooyKyZp", set_renv = FALSE)
rt <- search_tweets("#bitcoin -\"RT @\"", n = 500, token = tk, lang = "en", until = crawldayNext)
rt$text_url_cleaned <- NA
sqlSave(conn, rt, tablename = "BitcoinTweets", append = TRUE, rownames = FALSE, verbose = TRUE
, varTypes = c(created_at="datetime", quoted_created_at= "datetime", retweet_created_at="datetime", account_created_at="datetime"))
#crawl until gap from last crawl is filled
for (i in 1:35) {
print(i)
query = sprintf("SELECT TOP 1 [status_id] FROM [BitcoinTwts].[dbo].[BitcoinTweets] WHERE created_at >= '%s' ORDER BY status_id ASC", crawlday)
oldest <- sqlQuery(conn, query, errors = TRUE, as.is=T)
rt <- try({search_tweets("#bitcoin -\"RT @\"", n = 1000, token = tk, lang = "en", until = crawldayNext, max_id = oldest[1,])}, silent = TRUE)
if (nrow(rt) == 0) {
print("sleeping for ~15 minutes")
Sys.time()
Sys.sleep(910)
}else{
rt <- rt[!(rt$status_id==oldest[1,]),]
rt$text_url_cleaned <- NA
#remove tweets from day before
tweets2save <- subset(rt, created_at >= crawlday)
if(nrow(tweets2save) == 0){
print("loop done")
break;
}
sqlSave(conn, tweets2save, tablename = "BitcoinTweets", append = TRUE, rownames = FALSE)
Sys.sleep(10)
}
}
odbcClose(conn)
odbcCloseAll()
